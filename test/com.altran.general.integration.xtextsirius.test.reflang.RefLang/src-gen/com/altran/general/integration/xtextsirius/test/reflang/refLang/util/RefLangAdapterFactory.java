/**
 * generated by Xtext 2.22.0
 */
package com.altran.general.integration.xtextsirius.test.reflang.refLang.util;

import com.altran.general.integration.xtextsirius.test.reflang.refLang.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see com.altran.general.integration.xtextsirius.test.reflang.refLang.RefLangPackage
 * @generated
 */
public class RefLangAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static RefLangPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RefLangAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = RefLangPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RefLangSwitch<Adapter> modelSwitch =
    new RefLangSwitch<Adapter>()
    {
      @Override
      public Adapter caseContainer(Container object)
      {
        return createContainerAdapter();
      }
      @Override
      public Adapter caseIContainerContent(IContainerContent object)
      {
        return createIContainerContentAdapter();
      }
      @Override
      public Adapter caseSubContainer(SubContainer object)
      {
        return createSubContainerAdapter();
      }
      @Override
      public Adapter caseLeaf(Leaf object)
      {
        return createLeafAdapter();
      }
      @Override
      public Adapter caseReferences(References object)
      {
        return createReferencesAdapter();
      }
      @Override
      public Adapter caseReference(Reference object)
      {
        return createReferenceAdapter();
      }
      @Override
      public Adapter caseReferences2(References2 object)
      {
        return createReferences2Adapter();
      }
      @Override
      public Adapter caseReferences3(References3 object)
      {
        return createReferences3Adapter();
      }
      @Override
      public Adapter caseReference3(Reference3 object)
      {
        return createReference3Adapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link com.altran.general.integration.xtextsirius.test.reflang.refLang.Container <em>Container</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.altran.general.integration.xtextsirius.test.reflang.refLang.Container
   * @generated
   */
  public Adapter createContainerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.altran.general.integration.xtextsirius.test.reflang.refLang.IContainerContent <em>IContainer Content</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.altran.general.integration.xtextsirius.test.reflang.refLang.IContainerContent
   * @generated
   */
  public Adapter createIContainerContentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.altran.general.integration.xtextsirius.test.reflang.refLang.SubContainer <em>Sub Container</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.altran.general.integration.xtextsirius.test.reflang.refLang.SubContainer
   * @generated
   */
  public Adapter createSubContainerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.altran.general.integration.xtextsirius.test.reflang.refLang.Leaf <em>Leaf</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.altran.general.integration.xtextsirius.test.reflang.refLang.Leaf
   * @generated
   */
  public Adapter createLeafAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.altran.general.integration.xtextsirius.test.reflang.refLang.References <em>References</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.altran.general.integration.xtextsirius.test.reflang.refLang.References
   * @generated
   */
  public Adapter createReferencesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.altran.general.integration.xtextsirius.test.reflang.refLang.Reference <em>Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.altran.general.integration.xtextsirius.test.reflang.refLang.Reference
   * @generated
   */
  public Adapter createReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.altran.general.integration.xtextsirius.test.reflang.refLang.References2 <em>References2</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.altran.general.integration.xtextsirius.test.reflang.refLang.References2
   * @generated
   */
  public Adapter createReferences2Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.altran.general.integration.xtextsirius.test.reflang.refLang.References3 <em>References3</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.altran.general.integration.xtextsirius.test.reflang.refLang.References3
   * @generated
   */
  public Adapter createReferences3Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.altran.general.integration.xtextsirius.test.reflang.refLang.Reference3 <em>Reference3</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.altran.general.integration.xtextsirius.test.reflang.refLang.Reference3
   * @generated
   */
  public Adapter createReference3Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //RefLangAdapterFactory
